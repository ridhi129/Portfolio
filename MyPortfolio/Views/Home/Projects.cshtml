<br><br>
<h3> UI Design: Knocking on Heaven’s Door </h3>
<h5> March 2016 - April 2016 </h5>
<p>• Conceptualized and developed the user interface for a web application using JavaScript, HTML5, CSS and Fabric.js with rationales described using Wordpress CMS. RESTful APIs used: Google tasks, Google calendar, WUnderground, CNN news API.</p>
<br><br>
<h3> Spatio-Temporal Data: Search for Resources </h3>
<h5> February 2016 - April 2016 </h5>
<p>• Implemented deterministic, probabilistic, and baseline greedy algorithms as a simulation using Java, JavaScript, and Google Maps API to compare efficiency (time needed to park) for San Francisco parking dataset.</p>
<br><br>
<h3> Neighborhood Informant </h3>
<h5> August 2015 - November 2015 </h5>
<p> • Developed a windows application in ASP.Net C# to enable users (like customers and real estate agents) to find houses and properties in various areas of Chicago using Google Maps API.
 </p>
<br><br>
<h3> Test Harness</h3>
<h5> October 2015 </h5>
<p> • Developed a Test Harness for a Class Under Test using Java Reflection API. </p>
<br><br>
<h3> Scheme Interpreter </h3>
<h5> November 2015 </h5>
<p> • Developed a scheme language interpreter in Haskell by following the excellent wiki book tutorial 'Write Yourself a Scheme in 48 Hours'.<br> A large chunk of the standard, including functions, lambdas, lexical scoping, symbols, strings, integers, list manipulation, and assignment was implemented. It can be used interactively, with a REPL.  </p>
<br><br>
<h3> Input Sensitive Profiling</h3>
<h5> November 2015 </h5>
<p> • Analyzed for input sensitive performance bottlenecks in an open source multithreaded C++ application (RayTracer) via code analysis and instrumenting the application using AMD CodeXL tool. </p>
   